package conifer.factors

import conifer.io.TreeObservations
import conifer.UnrootedTree
import conifer.models.EvolutionaryModel
import conifer.models.MultiCategorySubstitutionModel
import conifer.models.RateMatrixMixture
import conifer.ctmc.SimpleRateMatrix
import conifer.ctmc.expfam.RateMtxNames;
import conifer.ctmc.RateMatrices
import conifer.models.DiscreteGammaMixture
import conifer.ctmc.expfam.ExpFamParameters
import blang.distributions.MultivariateNormal;

model Example {
  random ExpFamParameters weights 
  param UnrootedTree tree 
  param TreeObservations observations
  param EvolutionaryModel evoModel ?: 
    new MultiCategorySubstitutionModel(
      new DiscreteGammaMixture(
        0.0, 
        1.0, 
        SimpleRateMatrix::fromResource("/conifer/ctmc/kimura1980.txt"), 
        1
      ), 
      observations.nSites)

  laws {
  	  // assign a prior factor for weights
  	  // get dimension of weights and assign normal prior
  	  
      tree ~ NonClockTreePrior(Exponential.distribution(1.0))
  	  observations | tree, evoModel ~ UnrootedTreeLikelihood(tree, evoModel) 
  }
  
}