plugins {
  id 'org.xtext.xtend' version '2.0.5'
  id 'org.xtext.builder' version '2.0.5'
  id 'java'
  id 'eclipse'
  id 'maven'
  id 'application'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
  mavenCentral()
  jcenter()
  maven { url "file:///${System.properties['user.home']}/artifacts/" }
  maven { url 'https://jitpack.io' }
  maven { url "https://ubc-stat-ml.github.io/artifacts/" }
  maven { url "https://www.stat.ubc.ca/~bouchard/maven/" }
}

xtend {
  generator {
    javaSourceLevel = 1.8
  }
}

def blangVersion = '4.0.1' // Note to self: not the one that changes often!

dependencies {
  xtextLanguages "com.github.UBC-Stat-ML.blangDSL:ca.ubc.stat.blang:${blangVersion}"
  compile "com.github.UBC-Stat-ML.blangDSL:ca.ubc.stat.blang:${blangVersion}"
  compile group: 'com.github.UBC-Stat-ML', name: 'blangSDK', version: '2.7.0'
  compile group: 'com.google.guava', name: 'guava', version: '18.0'
  testCompile group: 'junit', name: 'junit', version: '4.11'
  compile group: 'junit', name: 'junit', version: '4.11'
  compile group: 'com.github.UBC-Stat-ML', name: 'binc', version: '2.0.5'
  compile group: 'com.github.UBC-Stat-ML', name: 'briefj', version: '2.6.1'
  compile group: 'com.github.UBC-Stat-ML', name: 'ahmc', version: '1.0.2'
  compile group: 'org.jgrapht', name: 'jgrapht-dist', version: '0.9.0'
  compile group: 'jebl', name: 'jebl', version: '2.0'
  compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
  compile group: 'org.apache.commons', name: 'commons-math3', version: '3.0'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.4.4'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.4.4'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.4.4'
  compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24'
  compile 'com.google.code.gson:gson:2.7'
  compile 'org.jblas:jblas:1.2.5'
  compile 'gov.nist.math.jama:gov.nist.math.jama:1.1.1'
  compile 'net.sourceforge.parallelcolt:parallelcolt:0.10.0'
}

xtext {
  languages {
    blang {
      setup = 'ca.ubc.stat.blang.BlangDslStandaloneSetup'
      fileExtension = 'bl'
      generator.outlet.producesJava = true
      generator.javaSourceLevel = '1.8'
    }
  }
}

if (JavaVersion.current().isJava8Compatible()) {
  allprojects {
    //noinspection SpellCheckingInspection
    tasks.withType(Javadoc) {
      // disable the crazy super-strict doclint tool in Java 8
      //noinspection SpellCheckingInspection
      options.addStringOption('Xdoclint:none', '-quiet')
    }
  }
}


uploadArchives {
  repositories.mavenDeployer {
    repository(url: "file:///${System.properties['user.home']}/artifacts/")
    pom.version = "2.1.1"
    pom.artifactId = "conifer"
    pom.groupId = "com.github.UBC-Stat-ML"
  }
}

jar {
    from { fileTree(dir: 'src/main/java', includes: [ '**/*.bl' ]) }
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from 'build/docs/javadoc'
}

startScripts.enabled = false
run.enabled = false

artifacts {
  archives jar
  archives sourcesJar
  archives javadocJar
}

// Put before TRIM line otherwise large file gets generated 
configurations.archives.with {
  artifacts.remove artifacts.find { it.file =~ 'tar' }
  artifacts.remove artifacts.find { it.file =~ 'zip' }
}
